@model MVCApp.Models.PatientModel

@{
    ViewBag.Title = "SerachPatient";
}
<script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js"></script>
<script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js"></script>
<script src="~/Scripts/source.js"></script>
<script type="text/javascript">


    var dosage = 0;
    FusionCharts.ready(function () {
        var chartObj = new FusionCharts({
            type: 'cylinder',
            dataFormat: 'json',
            renderAt: 'chart-container',
            width: '250',
            height: '350',
            dataSource: {
                "chart": {
                    "theme": "fusion",
                    "lowerLimit": "0",
                    "upperLimit": "120",
                    "lowerLimitDisplay": "Empty",
                    "upperLimitDisplay": "Full",
                    "numberSuffix": " ml/mol",
                    "showValue": "1",
                    "chartBottomMargin": "45",
                    "showValue": "0"
                },
                "annotations": {
                    "origw": "400",
                    "origh": "190",
                    "autoscale": "1",
                    "groups": [{
                        "id": "range",
                        "items": [{
                            "id": "rangeBg",
                            "type": "rectangle",
                            "x": "$canvasCenterX-45",
                            "y": "$chartEndY-30",
                            "tox": "$canvasCenterX +45",
                            "toy": "$chartEndY-75",
                            "fillcolor": "#add8e6"
                        }, {
                            "id": "rangeText",
                            "type": "Text",
                                "fontSize": "11", 
                                
                            "x": "$chartCenterX-45",
                            "y": "$chartEndY-50"
                        }]
                    }]
                }

            },
            "events": {
                "rendered": function (evtObj, argObj) {
                    var fuelVolume = 110;
                    evtObj.sender.chartInterval = setInterval(function () {
                        (fuelVolume < 10) ? (fuelVolume = 80) : "";

                     dosage = $("#DOSAGE").val();
                        
                        evtObj.sender.feedData && evtObj.sender.feedData("&value=" + dosage); //this function change vlaue of data
                    //    fuelVolume = consVolume;
                    }, 1000);
                },



            }
        }
        );
        chartObj.render();
    });

</script>
<h2>Serach Patient</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <h4>SEARCH PATIENT BY NAME</h4>
        <hr />
        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
        </td>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <br />
                <input type="submit" value="search" class="btn btn-primary" style="width:150em; margin-right:55em" />
            </div>
        </div>

        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
            <br />
            <dt>
                @Html.DisplayNameFor(model => model.Age)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Age)
            </dd>

            <br />
            <dt>
                @Html.DisplayNameFor(model => model.PatientId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PatientId)
            </dd>
            <br />


            <dt>
                @Html.DisplayNameFor(model => model.Dosage)
            </dt>
            <div id="chart-container">FusionCharts XT will load here!</div>

            



        </dl>
    </div>
}
<dd style="visibility: hidden">
    @Html.EditorFor(model => model.Dosage, new { htmlAttributes = new { @class = "form-control", @id = "DOSAGE" } })

</dd>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
